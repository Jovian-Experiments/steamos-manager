<!DOCTYPE node PUBLIC
"-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
"http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">


<!--
  Copyright © 2023 Collabora Ltd.
  Copyright © 2024 Igalia S.L.
  Copyright © 2024 Valve Corporation.
  SPDX-License-Identifier: MIT
-->

<node name="/" xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd">
  <!--
      com.steampowered.SteamOSManager1
      @short_description: Interface to control various aspects of SteamOS
  -->
  <interface name="com.steampowered.SteamOSManager1.Manager">

    <!--
        Version:

        The version of this interface implemented by this object.

        The manager may not support the latest version of the API.
        Each method/property has an associated version number that
        denotes in which interface version it first became available.
    -->
    <property name="Version" type="u" access="read"/>

    <!--
        PrepareFactoryReset:

        Perform factory reset of device.
        runs steamos-factory-reset script for now.

        Valid statuses: 0 = Unknown, 1 = RebootRequired

        Version available: 7
    -->
    <method name="PrepareFactoryReset">
      <arg type="u" name="status" direction="out"/>
    </method>

    <!--
        WifiPowerManagementState:

        Controls the wifi chip's power management features.

        Valid states: 0 = Unsupported Feature, 1 = Disabled, 2 = Enabled

        Version available: 7
    -->
    <property name="WifiPowerManagementState" type="u" access="readwrite"/>

    <!--
        FanControlState:

        Controls whether the OS or the BIOS should manage fan speed

        Valid states: 0 = Unsupported Feature, 1 = BIOS, 2 = OS

        Version available: 7
    -->
    <property name="FanControlState" type="u" access="readwrite"/>

    <!--
        HardwareCurrentlySupported:

        Reports whether the current hardware is supported or not.

        Valid states: 0 = Unsupported Feature, 1 = Unsupported, 2 = Supported

        Version available: 7
    -->
    <property name="HardwareCurrentlySupported" type="u" access="read"/>

    <!--
        ALSCalibrationGain:

        Provides the ALS calibration value.

        Note: Will be -1.0 if ALS calibration is unavailable.

        Version available: 7
    -->
    <property name="ALSCalibrationGain" type="d" access="read"/>

    <!--
        GetAlsIntegrationTimeFileDescriptor:

        @descriptor: A unix file descriptor that can be written to to set ALS integration time.
        Will be null if unable to open file or other error occurred.

        Get the ALS integration time file descriptor.

        Version available: 7
    -->
    <method name="GetAlsIntegrationTimeFileDescriptor">
      <arg type="h" name="descriptor" direction="out"/>
    </method>

    <!--
        BIOSUpdateStatus:

        Reports whether a BIOS update is available.

        Valid states: 0 = Unsupported Feature, 1 = Up to date, 2 = Update available

        Version available: 7
    -->
    <property name="BIOSUpdateStatus" type="u" access="read"/>

    <!--
        UpdateBIOS:

        Perform a BIOS update.

        Version available: 7
    -->
    <method name="UpdateBIOS" />

    <!--
        UpdateBIOSProgressNotification:

        @percent_completed: Progress percent completed in the range [0-100]

        Emitted whenever significant progress is made.

        Version available: 7
    -->
    <signal name="UpdateBIOSProgressNotification">
      <arg name="percent_completed" type="u" />
    </signal>

    <!--
        DockUpdateStatus:

        Reports whether a Dock Firmware update is available.

        Valid states: 0 = Unsupported Feature, 1 = Up to date, 2 = Update available

        Version available: 7
    -->
    <property name="DockUpdateStatus" type="u" access="read"/>

    <!--
        UpdateDock:

        Perform a Dock Firmware update.

        Version available: 7
    -->
    <method name="UpdateDock" />

    <!--
        UpdateDockProgressNotification:

        @percent_completed: Progress percent completed in the range [0-100]

        Emitted whenever significant progress is made.

        Version available: 7
    -->
    <signal name="UpdateDockProgressNotification">
      <arg name="percent_completed" type="u" />
    </signal>

    <!--
        TrimDevices:

        Perform fstrim on relevant disk devices. Calling this over fstrim is
        is important as some devices are not safe to trim unless some kernel
        quirks are available.

        Version available: 7
    -->
    <method name="TrimDevices" />

    <!--
        FormatDevice:

        @device: Which device to format, e.g. /dev/mmcblk0
        @label: Filesystem label to assign to the formatted device
        @validate: When set runs common checks for conterfeit flash media before formatting, e.g. f3probe

        Format and optionally validate a storage device to a steam compatible filesystem.

        Version available: 7
    -->
    <method name="FormatDevice">
      <arg type="s" name="device" direction="in"/>
      <arg type="s" name="label" direction="in"/>
      <arg type="b" name="validate" direction="in"/>
    </method>

    <!--
        SetGpuPerformanceLevel:

        The current GPU performance level.

        Valid states: 0 = Feature Unsupported, 1 = Auto, 2 = Low, 3 = High, 4 = Manual, 5 = Profile Peak

        Version available: 7
    -->
    <property name="GPUPerformanceLevel" type="u" access="readwrite"/>

    <!--
        ManualGPUClock:

        Controls the GPU clock frequency in MHz when GPUPerformanceLevel is set to Manual

        Version available: 7
    -->
    <property name="ManualGPUClock" type="u" access="readwrite"/>

    <!--
        ManualGPUClockMin:

        Minimum frequency allowed for GPU clocks.

        Version available: 7
    -->
    <property name="ManualGPUClockMin" type="u" access="read"/>

    <!--
        ManualGPUClockMax:

        Maximum frequency allowed for GPU clocks.

        Version available: 7
    -->
    <property name="ManualGPUClockMax" type="u" access="read"/>


    <!--
        TDPLimit:

        Controls the system TDP limit.

        Valid states: 0 = Feature Unsupported, or in range of [ TDPLimitMin, TDPLimitMax ]

        Version available: 7
    -->
    <property name="TDPLimit" type="u" access="readwrite"/>

    <!--
        TDPLimitMin:

        Minimum allowed TDP Limit

        Version available: 7
    -->
    <property name="TDPLimitMin" type="u" access="read"/>

    <!--
        TDPLimitMax:

        Maximum allowed TDP Limit

        Version available: 7
    -->
    <property name="TDPLimitMax" type="u" access="read"/>


    <!--
        WifiDebugModeState:

        Whether wifi debug mode is currently enabled.

        Valid states: 0 = Feature Unsupported, 1 = Disabled, 2 = Enabled

        Version available: 7
    -->
    <property name="WifiDebugModeState" type="u" access="read"/>

    <!--
        SetWifiDebugMode:

        @mode: 0 for off, 1 for on. Uses an integer for flexibility.
        @buffer_size: The ring buffer size in kilobytes per cpu.

        Enable/Disable wifi debug mode and configure the capture buffer size.

        Version available: 7
    -->
    <method name="SetWifiDebugMode">
      <arg type="u" name="mode" direction="in"/>
      <arg type="u" name="buffer_size" direction="in"/>
    </method>

    <!--
        CaptureWifiDebugTrace:

        @path: Output path to write the file

        Captures the current contents of the wifi debug trace and dumps it
        into @path. The buffers will be emptied and trace capture will resume
        after this call returns.

        Version available: 7
    -->
    <method name="CaptureWifiDebugTrace">
      <arg type="s" name="path" direction="in"/>
    </method>

    <!--
        WifiBackend:

        Controls which Wifi backend is used by NetworkManager

        Valid states: 0 = Feature Unsupported, 1 = iwd, 2 = wpa_supplicant

        Version available: 7
    -->
    <property name="WifiBackend" type="u" access="readwrite"/>

  </interface>

</node>
