<!DOCTYPE node PUBLIC
"-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
"http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">


<!--
  Copyright © 2023 Collabora Ltd.
  Copyright © 2024 Igalia S.L.
  Copyright © 2024 Valve Corporation.
  SPDX-License-Identifier: MIT
-->

<node name="/" xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd">
  <!--
      com.steampowered.SteamOSManager1.Manager
      @short_description: Interface to control various aspects of SteamOS
  -->
  <interface name="com.steampowered.SteamOSManager1.Manager">

    <!--
        Version:

        The version of this interface implemented by this object.

        The manager may not support the latest version of the API.
        Each method/property has an associated version number that
        denotes in which interface version it first became available.
    -->
    <property name="Version" type="u" access="read"/>

    <!--
        PrepareFactoryReset:

        Perform factory reset of device.
        runs steamos-factory-reset script for now.

        Valid statuses: 0 = Unknown, 1 = RebootRequired

        Version available: 7
    -->
    <method name="PrepareFactoryReset">
      <arg type="u" name="status" direction="out"/>
    </method>

    <!--
        WifiPowerManagementState:

        Controls the wifi chip's power management features.

        Valid states: 0 = Disabled, 1 = Enabled

        Version available: 7
    -->
    <property name="WifiPowerManagementState" type="u" access="readwrite"/>

    <!--
        FanControlState:

        Controls whether the OS or the BIOS should manage fan speed

        Valid states: 0 = BIOS, 1 = OS

        Version available: 7
    -->
    <property name="FanControlState" type="u" access="readwrite"/>

    <!--
        HardwareCurrentlySupported:

        Reports whether the current hardware is supported or not.

        Valid states: 0 = Unsupported, 1 = Supported

        Version available: 7
    -->
    <property name="HardwareCurrentlySupported" type="u" access="read"/>

    <!--
        AlsCalibrationGain:

        Provides the ALS calibration value.

        Note: Will be -1.0 if ALS calibration is unavailable.

        Version available: 7
    -->
    <property name="AlsCalibrationGain" type="d" access="read"/>

    <!--
        GetAlsIntegrationTimeFileDescriptor:

        @descriptor: A unix file descriptor that can be written to to set ALS integration time.
        Will be null if unable to open file or other error occurred.

        Get the ALS integration time file descriptor.

        Version available: 7
    -->
    <method name="GetAlsIntegrationTimeFileDescriptor">
      <arg type="h" name="descriptor" direction="out"/>
    </method>

    <!--
        UpdateBios:

        Perform a BIOS update.

        @jobpath: An object path that can be used to pause/resume/cancel the operation

        Version available: 8
    -->
    <method name="UpdateBios">
      <arg type="o" name="jobpath" direction="out"/>
    </method>

    <!--
        UpdateDock:

        Perform a Dock Firmware update.

        @jobpath: An object path that can be used to pause/resume/cancel the operation

        Version available: 8
    -->
    <method name="UpdateDock">
      <arg type="o" name="jobpath" direction="out"/>
    </method>

    <!--
        TrimDevices:

        Perform fstrim on relevant disk devices. Calling this over fstrim is
        is important as some devices are not safe to trim unless some kernel
        quirks are available.

        @jobpath: An object path that can be used to pause/resume/cancel the operation

        Version available: 8
    -->
    <method name="TrimDevices">
      <arg type="o" name="jobpath" direction="out"/>
    </method>

    <!--
        FormatDevice:

        @device: Which device to format, e.g. /dev/mmcblk0
        @label: Filesystem label to assign to the formatted device
        @validate: When set runs common checks for conterfeit flash media before formatting, e.g. f3probe
        @jobpath: An object path that can be used to pause/resume/cancel the operation

        Format and optionally validate a storage device to a steam compatible filesystem.

        Version available: 8
    -->
    <method name="FormatDevice">
      <arg type="s" name="device" direction="in"/>
      <arg type="s" name="label" direction="in"/>
      <arg type="b" name="validate" direction="in"/>
      <arg type="o" name="jobpath" direction="out"/>
    </method>

    <!--
        GpuPerformanceLevel:

        The current GPU performance level.

        Valid states: 0 = Auto, 1 = Low, 2 = High, 3 = Manual, 4 = Profile Peak

        Version available: 7
    -->
    <property name="GpuPerformanceLevel" type="u" access="readwrite"/>

    <!--
        ManualGpuClock:

        Controls the GPU clock frequency in MHz when GPUPerformanceLevel is set to Manual

        Version available: 7
    -->
    <property name="ManualGpuClock" type="u" access="readwrite"/>

    <!--
        ManualGpuClockMin:

        Minimum frequency allowed for GPU clocks.

        Version available: 7
    -->
    <property name="ManualGpuClockMin" type="u" access="read"/>

    <!--
        ManualGpuClockMax:

        Maximum frequency allowed for GPU clocks.

        Version available: 7
    -->
    <property name="ManualGpuClockMax" type="u" access="read"/>


    <!--
        TdpLimit:

        Controls the system TDP limit.

        Valid states: In range of [ TdpLimitMin, TdpLimitMax ]

        Version available: 7
    -->
    <property name="TdpLimit" type="u" access="readwrite"/>

    <!--
        TdpLimitMin:

        Minimum allowed TDP Limit

        Version available: 7
    -->
    <property name="TdpLimitMin" type="u" access="read"/>

    <!--
        TdpLimitMax:

        Maximum allowed TDP Limit

        Version available: 7
    -->
    <property name="TdpLimitMax" type="u" access="read"/>


    <!--
        WifiDebugModeState:

        Whether wifi debug mode is currently enabled.

        Valid states: 0 = Disabled, 1 = Enabled

        Version available: 7
    -->
    <property name="WifiDebugModeState" type="u" access="read"/>

    <!--
        SetWifiDebugMode:

        @mode: 0 for off, 1 for on. Uses an integer for flexibility.
        @buffer_size: The ring buffer size in kilobytes per cpu.

        Enable/Disable wifi debug mode and configure the capture buffer size.

        Version available: 7
    -->
    <method name="SetWifiDebugMode">
      <arg type="u" name="mode" direction="in"/>
      <arg type="u" name="buffer_size" direction="in"/>
    </method>

    <!--
        WifiBackend:

        Controls which Wifi backend is used by NetworkManager

        Valid states: 0 = iwd, 1 = wpa_supplicant

        Version available: 7
    -->
    <property name="WifiBackend" type="u" access="readwrite"/>

    <!--
        HdmiCecState:

        The current state of HDMI-CEC features on the system

        Valid states: 0 = Disabled, 1 = Control Only, 2 = Control And Wake

        Version available: 8
    -->
    <property name="HdmiCecState" type="u" access="readwrite"/>


    <!--
        GpuPowerProfiles:

        Enumerate the supported gpu power profiles available on the system.

        A list of supported profiles (a dictionary of values to names)
        Version available: 9
    -->
    <property name="GpuPowerProfiles" type="a{us}" access="read"/>

    <!--
        GpuPowerProfile:
      
        The current gpu power profile. Valid values come from GpuPowerProfiles property.
      
        Version available: 9
    -->
    <property name="GpuPowerProfile" type="u" access="readwrite"/>
    
  </interface>

  <!--
      com.steampowered.SteamOSManager1.Job
      @short_description: Interface to control a job

      Version available: 8
  -->
  <interface name="com.steampowered.SteamOSManager1.Job">
      <!--
        Pause the operation
      -->
      <method name="Pause"/>

      <!--
        Resume the operation
      -->
      <method name="Resume"/>

      <!--
        Cancel the operation

        @force Use sigkill if true, sigterm otherwise.
      -->
      <method name="Cancel">
        <arg type="b" name="force" direction="in"/>
      </method>

      <!--
        Wait for process to end and get exit code, resuming if paused

        @result The exit code, or negative signal number if the process
        exited via signal.
      -->
      <method name="Wait">
        <arg type="i" name="result" direction="out"/>
      </method>

      <!--
        Get the exit code of the process if possible.

        @result The exit code, or negative signal number if the process
        exited via signal.
        -->
      <method name="ExitCode">
        <arg type="i" name="result" direction="out"/>
      </method>
  </interface>

</node>
