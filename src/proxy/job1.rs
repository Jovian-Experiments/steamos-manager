//! # D-Bus interface proxy for: `com.steampowered.SteamOSManager1.Job1`
//!
//! This code was generated by `zbus-xmlgen` `4.1.0` from D-Bus introspection data.
//! Source: `com.steampowered.SteamOSManager1.xml`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the [Writing a client proxy] section of the zbus
//! documentation.
//!
//!
//! [Writing a client proxy]: https://dbus2.github.io/zbus/client.html
//! [D-Bus standard interfaces]: https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces,
use zbus::proxy;
#[proxy(
    interface = "com.steampowered.SteamOSManager1.Job1",
    default_service = "com.steampowered.SteamOSManager1",
    assume_defaults = true
)]
trait Job1 {
    /// Cancel method
    fn cancel(&self, force: bool) -> zbus::Result<()>;

    /// ExitCode method
    fn exit_code(&self) -> zbus::Result<i32>;

    /// Pause method
    fn pause(&self) -> zbus::Result<()>;

    /// Resume method
    fn resume(&self) -> zbus::Result<()>;

    /// Wait method
    fn wait(&self) -> zbus::Result<i32>;
}
